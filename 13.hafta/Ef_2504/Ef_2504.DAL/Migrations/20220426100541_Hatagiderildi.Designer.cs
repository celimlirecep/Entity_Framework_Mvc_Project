// <auto-generated />
using System;
using Ef_2504.DAL.Concrete.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ef_2504.DAL.Migrations
{
    [DbContext(typeof(BookAppDbContext))]
    [Migration("20220426100541_Hatagiderildi")]
    partial class Hatagiderildi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ef_2504.DAL.Entities.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AuthorCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 4, 26, 13, 5, 40, 264, DateTimeKind.Local).AddTicks(8962));

                    b.Property<string>("AuthorFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AuthorCreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AuthorFirstName = "Şeyma",
                            AuthorLastName = "kalın"
                        },
                        new
                        {
                            AuthorId = 2,
                            AuthorCreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AuthorFirstName = "cansu",
                            AuthorLastName = "hayat"
                        },
                        new
                        {
                            AuthorId = 3,
                            AuthorCreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AuthorFirstName = "Melike",
                            AuthorLastName = "ruhani"
                        });
                });

            modelBuilder.Entity("Ef_2504.DAL.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookCreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 4, 26, 13, 5, 40, 287, DateTimeKind.Local).AddTicks(76));

                    b.Property<string>("BookImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BookPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookCreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookImgUrl = "https://www.nobelkitap.com/nblurun/nobelkitap_com_460233.jpg",
                            BookName = "Yeni başlayanlar için c#",
                            BookPrice = 150m,
                            CategoryId = 1
                        },
                        new
                        {
                            BookId = 2,
                            BookCreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookImgUrl = "https://i.dr.com.tr/cache/500x400-0/originals/0000000694609-1.jpg",
                            BookName = "Yeni başlayanlar için Pyton",
                            BookPrice = 150m,
                            CategoryId = 2
                        },
                        new
                        {
                            BookId = 3,
                            BookCreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BookImgUrl = "https://i.dr.com.tr/cache/600x600-0/originals/0000000457676-1.jpg",
                            BookName = "javascript Programlama",
                            BookPrice = 150m,
                            CategoryId = 3
                        });
                });

            modelBuilder.Entity("Ef_2504.DAL.Entities.BookAuthor", b =>
                {
                    b.Property<int>("BookAuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("BookAuthorId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("BookAuthor");

                    b.HasData(
                        new
                        {
                            BookAuthorId = 1,
                            AuthorId = 1,
                            BookId = 1
                        },
                        new
                        {
                            BookAuthorId = 2,
                            AuthorId = 2,
                            BookId = 2
                        },
                        new
                        {
                            BookAuthorId = 3,
                            AuthorId = 3,
                            BookId = 3
                        });
                });

            modelBuilder.Entity("Ef_2504.DAL.Entities.BookDetail", b =>
                {
                    b.Property<int>("BookDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookDetaiCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookDetailCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookDetailISBN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0000-0000-0000");

                    b.Property<int>("BookDetailYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2022);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("BookDetailId");

                    b.HasIndex("BookId")
                        .IsUnique();

                    b.ToTable("BookDetails");

                    b.HasData(
                        new
                        {
                            BookDetailId = 1,
                            BookDetailYear = 2021,
                            BookId = 1
                        },
                        new
                        {
                            BookDetailId = 2,
                            BookDetailYear = 2020,
                            BookId = 2
                        },
                        new
                        {
                            BookDetailId = 3,
                            BookDetailYear = 2023,
                            BookId = 3
                        });
                });

            modelBuilder.Entity("Ef_2504.DAL.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categoryname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryDescription = "romanlar",
                            Categoryname = "Roman"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryDescription = "Hikayeler",
                            Categoryname = "Hikaye"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryDescription = "Bİlgisayar Kitapları",
                            Categoryname = "Bilgisayar"
                        });
                });

            modelBuilder.Entity("Ef_2504.DAL.Entities.Book", b =>
                {
                    b.HasOne("Ef_2504.DAL.Entities.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ef_2504.DAL.Entities.BookAuthor", b =>
                {
                    b.HasOne("Ef_2504.DAL.Entities.Author", "Author")
                        .WithMany("BookAuthor")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ef_2504.DAL.Entities.Book", "Book")
                        .WithMany("BookAuthors")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Ef_2504.DAL.Entities.BookDetail", b =>
                {
                    b.HasOne("Ef_2504.DAL.Entities.Book", "Book")
                        .WithOne("BookDetail")
                        .HasForeignKey("Ef_2504.DAL.Entities.BookDetail", "BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("Ef_2504.DAL.Entities.Author", b =>
                {
                    b.Navigation("BookAuthor");
                });

            modelBuilder.Entity("Ef_2504.DAL.Entities.Book", b =>
                {
                    b.Navigation("BookAuthors");

                    b.Navigation("BookDetail");
                });

            modelBuilder.Entity("Ef_2504.DAL.Entities.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
